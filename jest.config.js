module.exports = {
  runner: 'tsc',
  testEnvironment: 'node',
  displayName: {
    name: 'CalamusApi',
    color: 'yellow',
  },
  moduleFileExtensions: ['ts', 'js'],
  preset: '@shelf/jest-mongodb',
  // testEnvironment: "node",
  testMatch: [
    '<rootDir>/__tests__/**/*.{js,ts,tsx,jsx,mjs}',
    '<rootDir>/?(*.)(spec|test).{js,jsx,ts,tsx,mjs}',
    '<rootDir>/src/**/__tests__/**/*.{js,ts,tsx,jsx,mjs}',
    '<rootDir>/src/**/?(*.)(spec|test).{js,ts,tsx,jsx,mjs}',
  ],
  setupFiles: ['<rootDir>/scripts/setup-tests.ts'],
  collectCoverageFrom: ['<rootDir>/src/**/*.ts', '!**/node_modules/**'],
  coveragePathIgnorePatterns: [
    '/node_modules/',
    '<rootDir>/src/app.ts',
    '<rootDir>/src/types',
    '<rootDir>/src/config.ts',
    '<rootDir>/src/server.ts',
    '<rootDir>/src/database/index.ts',
    '<rootDir>/src/database/repository/([A-Za-z]+)/([A-Za-z]*Model.ts)',
    '<rootDir>/src/core/logger.ts',
    '<rootDir>/src/core/ApiError.ts',
    '<rootDir>/src/core/ApiResponse.ts',
    '<rootDir>/src/core/jwt/mock.ts',
    '<rootDir>/src/core/jwt/exceptions.ts',
    '<rootDir>/src/security/([A-Za-z]+)/mock.ts',
    '<rootDir>/src/routes/([A-Za-z]+)/mock.ts',
    '<rootDir>/src/routes/auth/([A-Za-z]+)/mock.ts',
    '<rootDir>/src/routes/([A-Za-z]+)/schema.ts',
    '<rootDir>/src/routes/([A-Za-z]+)/([A-Za-z]+)/schema.ts',
    '<rootDir>/src/routes/index.ts',
    '<rootDir>/src/utils/',
    '<rootDir>/src/security/schema.ts',
  ],
  // TODO: setup coverageThreshold once bug on testing has been fixed
  // coverageThreshold: {
  //   global: {
  //     lines: 90,
  //     statements: 90,
  //   },
  // },
  transform: {
    '^.+\\.ts$': 'ts-jest',
  },
  moduleNameMapper: {
    '^@app': '<rootDir>/src/app.ts',
    '^@config': '<rootDir>/src/config.ts',
    '^@launchApi': '<rootDir>/src/data/api/LaunchApi.ts',
    '^@userRepo': '<rootDir>/src/data/db/UserRepository.ts',
    '^@database': '<rootDir>/src/database',
    '^@database/(.*)$': '<rootDir>/src/database/$1',
    '^@core/(.*)$': '<rootDir>/src/core/$1',
    '^@utils': '<rootDir>/src/utils.ts',
    '^@logger': '<rootDir>/src/core/logger.ts',
    '^@gql/(.*)$': '<rootDir>/src/gql/$1',
    '^@launchResolver': '<rootDir>/src/gql/launch/launchResolver.ts',
    '^@missionResolver': '<rootDir>/src/gql/mission/missionResolver.ts',
    '^@mutationResolver': '<rootDir>/src/gql/mutation/mutationResolver.ts',
    '^@queryResolver': '<rootDir>/src/gql/query/queryResolver.ts',
    '^@userResolver': '<rootDir>/src/gql/user/userResolver.ts',
  },
};
